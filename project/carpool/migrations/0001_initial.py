# Generated by Django 5.2.4 on 2025-08-29 11:54

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import multiselectfield.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fulltext",
                    models.CharField(
                        help_text="Label for the location",
                        max_length=100,
                        verbose_name="label",
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True,
                        help_text="Street address of the location",
                        max_length=200,
                        verbose_name="street",
                    ),
                ),
                (
                    "zipcode",
                    models.CharField(
                        blank=True,
                        help_text="Zipcode of the location",
                        max_length=10,
                        verbose_name="zipcode",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="City of the location",
                        max_length=100,
                        verbose_name="city",
                    ),
                ),
                (
                    "lat",
                    models.FloatField(
                        help_text="Latitude of the location",
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                        verbose_name="latitude",
                    ),
                ),
                (
                    "lng",
                    models.FloatField(
                        help_text="Longitude of the location",
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                        verbose_name="longitude",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Step",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="name")),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="Order of the step in the ride",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="order",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        help_text="Location of the step",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="carpool.location",
                        verbose_name="localisation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="default",
                        help_text="Name of the vehicle",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
                (
                    "seats",
                    models.PositiveIntegerField(
                        help_text="Number of seats in the vehicle",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="seats",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Color of the vehicle",
                        max_length=50,
                        verbose_name="color",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        help_text="Driver of the vehicle",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        related_query_name="vehicle",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="driver",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ride",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "start_dt",
                    models.DateTimeField(
                        blank=True,
                        help_text="The start date and time of the ride",
                        null=True,
                        verbose_name="start date and time",
                    ),
                ),
                (
                    "end_dt",
                    models.DateTimeField(
                        blank=True,
                        help_text="The end date and time of the ride",
                        null=True,
                        verbose_name="end date and time",
                    ),
                ),
                (
                    "payment_method",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("CASH", "Cash"),
                            ("LYF", "Lyf Pay"),
                            ("WIRE", "Wire Transfer"),
                        ],
                        default=["CASH"],
                        help_text="The payment method for the ride",
                        max_length=13,
                        verbose_name="payment method",
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        blank=True,
                        help_text="The price of the ride",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="price",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Comment about the ride",
                        verbose_name="comment",
                    ),
                ),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.LineStringField(
                        blank=True,
                        default=None,
                        help_text="Geographical representation of the ride",
                        null=True,
                        srid=4326,
                        verbose_name="geometry",
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True,
                        help_text="Duration of the ride",
                        null=True,
                        verbose_name="duration",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        help_text="The driver of the ride",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rides_as_driver",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="driver",
                    ),
                ),
                (
                    "end_loc",
                    models.ForeignKey(
                        blank=True,
                        help_text="The end location of the ride",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rides_end_here",
                        to="carpool.location",
                        verbose_name="end location",
                    ),
                ),
                (
                    "rider",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The rider of the ride",
                        related_name="rides_as_rider",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="rider",
                    ),
                ),
                (
                    "start_loc",
                    models.ForeignKey(
                        blank=True,
                        help_text="The start location of the ride",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rides_start_here",
                        to="carpool.location",
                        verbose_name="start location",
                    ),
                ),
                (
                    "steps",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The steps of the ride",
                        related_name="rides",
                        to="carpool.step",
                        verbose_name="steps",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        help_text="The vehicle of the ride",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="carpool.vehicle",
                        verbose_name="vehicle",
                    ),
                ),
            ],
        ),
    ]
