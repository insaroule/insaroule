[project]
name = "insaroule"
version = "0.1.0"
description = "Yet another carpooling application"
requires-python = ">=3.12"
readme = "README.md"
dependencies = [
    "celery[redis]>=5.5.3",
    "channels>=4.2.2",
    "channels-redis>=4.3.0",
    "django>=5.2.4",
    "django-environ>=0.12.0",
    "django-multiselectfield>=1.0.1",
    "gunicorn>=23.0.0",
    "psycopg>=3.2.9",
    "requests>=2.32.4",
    "tblib>=3.1.0",
    "uvicorn-worker>=0.3.0",
    "uvicorn[standard]>=0.35.0",
]


[dependency-groups]
dev = [
    "coverage[toml]>=7.10.1",
    "daphne>=4.2.1",
    "factory-boy>=3.3.3",
    "poethepoet>=0.37.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "ruff>=0.12.5",
]

[tool.coverage.report]
fail_under = 100
omit = ["*/migrations/*", "manage.py", "asgi.py", "wsgi.py", "chat/routing.py"]
exclude_also = ["^\\s*def __str__\\(", "if settings\\.DEBUG:"]

show_missing = true
skip_covered = true

[tool.poe.tasks.test]
help = "Running the test suite"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.testing" }
cwd = "project"
cmd = "uv run manage.py test"

[tool.poe.tasks.collectstatic]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run manage.py collectstatic"

[tool.poe.tasks.uvicorn]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run uvicorn project.asgi:application --reload --reload-include '*.html'"

[tool.poe.tasks.makemigrations]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run manage.py makemigrations"

[tool.poe.tasks.migrate]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run manage.py migrate"

[tool.poe.tasks.makemessages]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run manage.py makemessages"

[tool.poe.tasks.compilemessages]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run manage.py compilemessages"

[tool.poe.tasks.celery-worker]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run celery -A project worker -l info"

[tool.poe.tasks.celery-beat]
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.development" }
cmd = "uv run celery -A project beat -l info"


[tool.poe.tasks.mpy]
help = "Alias for running manage.py"
cwd = "project"
cmd = "uv run manage.py"

[tool.poe.tasks.coverage-test]
help = "Run the test suite with coverage"
cwd = "project"
env = { "DJANGO_SETTINGS_MODULE" = "project.settings.testing" }
cmd = "uv run coverage run --rcfile=../pyproject.toml --source='.' --branch manage.py test"

[tool.poe.tasks.coverage-report]
help = "Generate a coverage report"
cwd = "project"
cmd = "uv run coverage report --rcfile=../pyproject.toml"

[tool.poe.tasks.coverage-html]
help = "Generate an HTML coverage report"
cwd = "project"
cmd = "uv run coverage html --rcfile=../pyproject.toml"

